environment:
    matrix:
        -   JULIAVERSION: "julialang/bin/winnt/x86/0.4/julia-0.4-latest-win32.exe"
        -   JULIAVERSION: "julialang/bin/winnt/x64/0.4/julia-0.4-latest-win64.exe"
        -   JULIAVERSION: "julianightlies/bin/winnt/x86/julia-latest-win32.exe"
        -   JULIAVERSION: "julianightlies/bin/winnt/x64/julia-latest-win64.exe"

branches:
  only:
    - master

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

install:
  #### Install Julia
  # Download most recent Julia Windows binary
  - ps: (new-object net.webclient).DownloadFile($("http://s3.amazonaws.com/"+$env:JULIAVERSION),"C:\projects\julia-binary.exe")

  # Run installer silently, output to C:\projects\julia
  - C:\projects\julia-binary.exe /S /D=C:\projects\julia

  #### Install Python
  # Set up python

  # Download
  - ps: (new-object net.webclient).DownloadFile("https://www.python.org/ftp/python/2.7.11/python-2.7.11.amd64.msi", "C:\projects\python-binary.msi")

  # Install
  - msiexec.exe /a C:\projects\python-binary.msi /qn /norestart TARGETDIR="C:\\projects\\python"

  - "SET PATH=C:\\projects\\python;C:\\projects\\python\\Scripts;C:\\projects\\python\\Tools\\Scripts;%PATH%;"
  # - "SET PATH=\"C:\\projects\\python;C:\\projects\\python\\Tools\\Scripts;%PATH%\""

  # Windows installer doesn't seem to give pip by default, need to explicitly request it:
  - "C:\\projects\\python\\python -m ensurepip"

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "pip install --disable-pip-version-check --user --upgrade pip"

  # Install requires python libraries
  - "pip install --user holidays"

  # PyCall will not be able to find the new python unless we rebuild it with the correct path.
  #~ - "ENV[\"PYTHON\"] = \"%PYTHON%\""
  # - "SET PYTHON=C:\\projects\\python\\python"
  # - C:\projects\julia\bin\julia -e "Pkg.build(\"PyCall\")"

build_script:
  # Need to convert from shallow to complete for Pkg.clone to work
  - IF EXIST .git\shallow (git fetch --unshallow)
  - C:\projects\julia\bin\julia -e "versioninfo();
      Pkg.clone(pwd(), \"Holidays\"); Pkg.build(\"Holidays\")"

test_script:
  - C:\projects\julia\bin\julia --check-bounds=yes -e "Pkg.test(\"Holidays\")"
